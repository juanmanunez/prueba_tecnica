{"ast":null,"code":"import { ADD_TASK, ADD_TASK_SUCCESS, ADD_TASK_ERROR, START_GET_TASK, GET_TASK_SUCCESS, GET_TASK_ERROR, GET_TASK_DELETED, TASK_DELETED_SUCCESS, TASK_DELETED_ERROR, GET_TASK_EDITED, START_TASK_EDITED, TASK_EDITED_SUCCESS, TASK_EDITED_ERROR } from '../types';\nimport clientAxios from '../config/axios';\nimport Swal from 'sweetalert2';\nexport function addNewTaskAction(task) {\n  return async dispatch => {\n    // console.log(task);\n    dispatch(addTask());\n\n    try {\n      const newTask = await clientAxios.post('/tasks', task);\n      console.log(newTask);\n      dispatch(addTaskSuccess(newTask.data));\n      Swal.fire('Éxito', 'La tarea se agregó de forma exitosa', 'success');\n    } catch (error) {\n      dispatch(addTaskError(error));\n      Swal.fire({\n        icon: 'error',\n        title: 'Ooops',\n        text: 'Tenemos un error, intenta nuevamente'\n      });\n    }\n  };\n}\n\nconst addTask = () => ({\n  type: ADD_TASK\n});\n\nconst addTaskSuccess = task => ({\n  type: ADD_TASK_SUCCESS,\n  payload: task\n});\n\nconst addTaskError = error => ({\n  type: ADD_TASK_ERROR,\n  loading: false,\n  error: true\n}); // traer tareas \n\n\nexport function getTaskAction() {\n  return async dispatch => {\n    dispatch(getTask());\n\n    try {\n      const resp = await clientAxios.get('/tasks');\n      console.log(resp);\n      dispatch(getTaskSuccess(resp.data));\n    } catch (error) {\n      dispatch(getTaskError(error));\n    }\n  };\n}\n\nconst getTask = () => ({\n  type: START_GET_TASK\n});\n\nconst getTaskSuccess = resp => ({\n  type: GET_TASK_SUCCESS,\n  loading: false,\n  error: null,\n  payload: resp\n});\n\nconst getTaskError = error => ({\n  type: GET_TASK_ERROR,\n  loading: false,\n  error: true\n}); // traer tareas \n// borrar tareas \n\n\nexport function deleteTaskAction(id) {\n  return async dispatch => {\n    dispatch(getTaskDelete(id));\n\n    try {\n      await clientAxios.delete(`/tasks/${id}`);\n      dispatch(deletedTaskSuccess());\n      Swal.fire('Eliminada', 'Tarea Eliminada correctamente', 'success');\n    } catch (error) {\n      console.log(error);\n      dispatch(deletedTaskError());\n    }\n  };\n}\n\nconst getTaskDelete = id => ({\n  type: GET_TASK_DELETED,\n  payload: id\n});\n\nconst deletedTaskSuccess = () => ({\n  type: TASK_DELETED_SUCCESS\n});\n\nconst deletedTaskError = () => ({\n  type: TASK_DELETED_ERROR\n}); // borrar tareas \n// editar tareas\n\n\nexport function getTaskEdit(task) {\n  return async dispatch => {\n    dispatch(getTaskEditDelete(task));\n  };\n}\n\nconst getTaskEditDelete = task => ({\n  type: GET_TASK_EDITED,\n  payload: task\n}); // editar tareas\n// editar put api\n\n\nexport function editTaskAction(task) {\n  return async dispatch => {\n    dispatch(editTask(task));\n\n    try {\n      await clientAxios.put(`/tasks/${task.id}`, task);\n      dispatch(editTaskSuccess(task));\n    } catch (error) {}\n  };\n}\n\nconst editTask = task => ({\n  type: START_TASK_EDITED,\n  payload: task\n});\n\nconst editTaskSuccess = task => ({\n  type: TASK_EDITED_SUCCESS,\n  payload: task\n});\n\nconst editTaskError = () => ({\n  type: TASK_EDITED_ERROR\n}); // editar put api","map":{"version":3,"sources":["/Users/juanma/Documents/GitHub/prueba_tecnica/src/actions/taskActions.js"],"names":["ADD_TASK","ADD_TASK_SUCCESS","ADD_TASK_ERROR","START_GET_TASK","GET_TASK_SUCCESS","GET_TASK_ERROR","GET_TASK_DELETED","TASK_DELETED_SUCCESS","TASK_DELETED_ERROR","GET_TASK_EDITED","START_TASK_EDITED","TASK_EDITED_SUCCESS","TASK_EDITED_ERROR","clientAxios","Swal","addNewTaskAction","task","dispatch","addTask","newTask","post","console","log","addTaskSuccess","data","fire","error","addTaskError","icon","title","text","type","payload","loading","getTaskAction","getTask","resp","get","getTaskSuccess","getTaskError","deleteTaskAction","id","getTaskDelete","delete","deletedTaskSuccess","deletedTaskError","getTaskEdit","getTaskEditDelete","editTaskAction","editTask","put","editTaskSuccess","editTaskError"],"mappings":"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","sourcesContent":["import {\n    ADD_TASK,\n    ADD_TASK_SUCCESS,\n    ADD_TASK_ERROR,\n    START_GET_TASK,\n    GET_TASK_SUCCESS,\n    GET_TASK_ERROR,\n    GET_TASK_DELETED,\n    TASK_DELETED_SUCCESS,\n    TASK_DELETED_ERROR,\n    GET_TASK_EDITED,\n    START_TASK_EDITED,\n    TASK_EDITED_SUCCESS,\n    TASK_EDITED_ERROR,\n} from '../types';\n\nimport clientAxios from '../config/axios';\nimport Swal from 'sweetalert2';\n\nexport function addNewTaskAction(task) {\n    return async (dispatch) => {\n       // console.log(task);\n        dispatch( addTask() );\n\n        try {\n            const newTask = await clientAxios.post('/tasks', task);\n\n            console.log(newTask);\n            dispatch( addTaskSuccess(newTask.data) );\n\n            Swal.fire(\n                'Éxito', \n                'La tarea se agregó de forma exitosa',\n                'success'\n            );\n\n        } catch (error) {\n\n            dispatch( addTaskError(error) );\n\n            Swal.fire({\n                icon: 'error',\n                title: 'Ooops',\n                text: 'Tenemos un error, intenta nuevamente'\n            })\n        }\n    }\n}\n\nconst addTask = () => ({\n    type: ADD_TASK\n});\n\nconst addTaskSuccess = (task) => ({\n    type: ADD_TASK_SUCCESS,\n    payload: task\n});\n\nconst addTaskError = (error) => ({\n    type: ADD_TASK_ERROR,\n    loading: false,\n    error: true\n});\n\n\n// traer tareas \n\nexport function getTaskAction() {\n    return async (dispatch) => {\n        dispatch( getTask() );\n\n        try {\n            const resp = await clientAxios.get('/tasks');\n            console.log(resp);\n            dispatch( getTaskSuccess(resp.data) );\n\n        } catch (error) {\n            dispatch( getTaskError(error) );\n        }\n    }\n}\n\nconst getTask = () => ({\n    type: START_GET_TASK\n})\n\nconst getTaskSuccess = resp => ({\n    type: GET_TASK_SUCCESS,\n    loading: false,\n    error: null,\n    payload: resp\n});\nconst getTaskError = error => ({\n    type: GET_TASK_ERROR,\n    loading: false,\n    error: true\n});\n\n// traer tareas \n\n\n// borrar tareas \n\nexport function deleteTaskAction(id) {\n    return async (dispatch) => {\n        dispatch( getTaskDelete(id) );\n\n        try {\n            await clientAxios.delete(`/tasks/${id}`);\n            dispatch(deletedTaskSuccess());\n            Swal.fire(\n                'Eliminada',\n                'Tarea Eliminada correctamente',\n                'success'\n            )\n            \n        } catch (error) {\n            console.log(error);\n            dispatch(deletedTaskError());\n        }\n    }\n}\n\nconst getTaskDelete = id => ({\n    type: GET_TASK_DELETED,\n    payload: id\n});\n\nconst deletedTaskSuccess = () => ({\n    type: TASK_DELETED_SUCCESS\n});\nconst deletedTaskError = () => ({\n    type: TASK_DELETED_ERROR\n});\n\n// borrar tareas \n\n// editar tareas\nexport function getTaskEdit(task) {\n    return async (dispatch) => {\n        dispatch( getTaskEditDelete(task) );\n    }\n}\n\nconst getTaskEditDelete = task => ({\n    type: GET_TASK_EDITED,\n    payload: task\n});\n// editar tareas\n\n// editar put api\n\nexport function editTaskAction(task) {\n    return async (dispatch) => {\n\n        dispatch ( editTask(task) );\n\n        try {\n            await clientAxios.put(`/tasks/${task.id}`, task);\n\n            dispatch ( editTaskSuccess(task) );\n        } catch (error) {\n            \n        }\n    }\n}\n\n\nconst editTask = task => ({\n    type: START_TASK_EDITED,\n    payload: task\n});\n\nconst editTaskSuccess = task => ({\n    type: TASK_EDITED_SUCCESS,\n    payload: task\n});\nconst editTaskError = () => ({\n    type: TASK_EDITED_ERROR\n});\n// editar put api"]},"metadata":{},"sourceType":"module"}